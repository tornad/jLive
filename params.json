{"name":"Jlive","tagline":"Javascript BackboneJS Helper and Object for dynamic and realtime w/ URI autorefresh ","body":"# Concept\r\n\r\nThe principle of Jlive is based on the triplet **screen** / **action** / **event**. \r\n\r\nThis creates a unified operation of the application. \r\nWe see the display, an action changes an object (model), an event is issued to inform the change of content / value of the object. Then, the display is rebuilt with the new values. \r\n\r\nUnlike a conventional operation, the call to action will not return a result or value that will be used in the display. The call for action causes a change in the model, and this change will be reflected in the display via the receipt of an event send by the server.\r\n\r\nThis is what we called the **one way workflow**.\r\n\r\n# One way workflow\r\n\r\n![schema](https://raw.github.com/tornad/jLive/master/docs/jlive-schema.png)\r\n\r\n# sample use\r\n      var sondeList =  new jLive('/allsondes.json')\r\n      \r\n      sondeList.setTemplate('.templatejLive')\r\n      sondeList.setLayout('.viewRendererJLive');\r\n\r\n      sondeList.fetch({});\r\n\r\n \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}